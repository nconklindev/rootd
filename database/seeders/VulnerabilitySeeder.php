<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;

class VulnerabilitySeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $user = \App\Models\User::first();

        if (! $user) {
            return; // No user to associate vulnerabilities with
        }

        $vulnerabilities = [
            [
                'title' => 'SQL Injection in User Authentication',
                'cve_id' => 'CVE-2024-12345',
                'description' => 'A SQL injection vulnerability was discovered in the user authentication system that allows attackers to bypass login mechanisms and potentially extract sensitive user data from the database.',
                'severity' => 'critical',
                'affected_product' => 'WebApp Pro',
                'affected_versions' => '1.0.0 - 2.3.4',
                'status' => 'open',
                'reporter_name' => 'Security Research Team',
                'reporter_email' => 'security@company.com',
                'cvss_score' => 9.1,
                'remediation' => 'Implement parameterized queries and input validation for all authentication endpoints.',
                'discovered_at' => now()->subDays(15),
                'disclosed_at' => now()->subDays(10),
                'references' => ['https://owasp.org/www-community/attacks/SQL_Injection', 'https://cwe.mitre.org/data/definitions/89.html'],
                'user_id' => $user->id,
            ],
            [
                'title' => 'Cross-Site Scripting (XSS) in Comment System',
                'cve_id' => 'CVE-2024-12346',
                'description' => 'Stored XSS vulnerability in the comment system allows malicious users to inject JavaScript that executes when other users view the affected pages.',
                'severity' => 'high',
                'affected_product' => 'BlogEngine',
                'affected_versions' => '3.1.0 - 3.2.5',
                'status' => 'in_progress',
                'reporter_name' => 'John Doe',
                'reporter_email' => 'john.doe@researcher.com',
                'cvss_score' => 7.4,
                'remediation' => 'Sanitize all user input and implement Content Security Policy headers.',
                'discovered_at' => now()->subDays(8),
                'disclosed_at' => now()->subDays(3),
                'references' => ['https://owasp.org/www-community/attacks/xss/', 'https://cwe.mitre.org/data/definitions/79.html'],
                'user_id' => $user->id,
            ],
            [
                'title' => 'Information Disclosure in API Response',
                'cve_id' => null,
                'description' => 'API endpoints are returning sensitive internal system information including database schema details and server configuration in error responses.',
                'severity' => 'medium',
                'affected_product' => 'API Gateway',
                'affected_versions' => '2.0.0 - 2.1.3',
                'status' => 'resolved',
                'reporter_name' => 'Internal Audit',
                'reporter_email' => 'audit@company.com',
                'cvss_score' => 5.3,
                'remediation' => 'Configure proper error handling to return generic error messages without sensitive information.',
                'discovered_at' => now()->subDays(30),
                'disclosed_at' => now()->subDays(25),
                'resolved_at' => now()->subDays(5),
                'references' => ['https://cwe.mitre.org/data/definitions/200.html'],
                'user_id' => $user->id,
            ],
            [
                'title' => 'Weak Password Policy Implementation',
                'cve_id' => null,
                'description' => 'The password policy enforcement is not properly implemented, allowing users to set weak passwords that do not meet security requirements.',
                'severity' => 'low',
                'affected_product' => 'UserManager',
                'affected_versions' => '1.5.0 - 1.6.2',
                'status' => 'wont_fix',
                'reporter_name' => 'QA Team',
                'reporter_email' => 'qa@company.com',
                'cvss_score' => 3.1,
                'remediation' => 'Will be addressed in the next major version with enhanced authentication system.',
                'discovered_at' => now()->subDays(60),
                'disclosed_at' => now()->subDays(50),
                'references' => ['https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html'],
                'user_id' => $user->id,
            ],
            [
                'title' => 'Insecure Direct Object Reference in File Download',
                'cve_id' => 'CVE-2024-12347',
                'description' => 'Users can access arbitrary files by manipulating file ID parameters in download requests, potentially exposing sensitive system files.',
                'severity' => 'high',
                'affected_product' => 'DocumentManager',
                'affected_versions' => '4.2.0 - 4.3.1',
                'status' => 'open',
                'reporter_name' => 'External Researcher',
                'reporter_email' => 'researcher@security.org',
                'cvss_score' => 8.1,
                'remediation' => 'Implement proper access controls and validate user permissions before serving files.',
                'discovered_at' => now()->subDays(3),
                'disclosed_at' => now()->subDay(),
                'references' => ['https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control', 'https://cwe.mitre.org/data/definitions/22.html'],
                'user_id' => $user->id,
            ],
            [
                'title' => 'Deprecated TLS Version Support',
                'cve_id' => null,
                'description' => 'The application still supports TLS 1.0 and 1.1, which are deprecated and contain known security vulnerabilities.',
                'severity' => 'info',
                'affected_product' => 'WebServer',
                'affected_versions' => 'All versions',
                'status' => 'duplicate',
                'reporter_name' => 'Security Scanner',
                'reporter_email' => 'scanner@company.com',
                'cvss_score' => 2.2,
                'remediation' => 'Disable support for TLS 1.0 and 1.1, enforce TLS 1.2 minimum.',
                'discovered_at' => now()->subDays(90),
                'disclosed_at' => now()->subDays(85),
                'references' => ['https://tools.ietf.org/rfc/rfc8996.txt'],
                'user_id' => $user->id,
            ],
        ];

        foreach ($vulnerabilities as $vulnerability) {
            \App\Models\Vulnerability::create($vulnerability);
        }
    }
}
